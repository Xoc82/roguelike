<html>
<head>
    <script src="/static/api.js"></script>
    <script>
        function registerClickOnClass(className, callback) {
            for (let button of document.getElementsByClassName(className)) {
                button.addEventListener("click", (e) => callback(e));
            }
        }

        var loadJson = (name) => new Promise(resolve => {
            let xhr = new XMLHttpRequest();
            xhr.open("GET", name);
            xhr.send();
            xhr.onload = () => {
                if (xhr.status === 200) {
                    let data = JSON.parse(xhr.responseText);
                    resolve(data);
                } else {
                    alert(xhr.responseText);
                }
            };
        });

        async function startGame() {
            let unitTypes = (await loadJson("unitTypes.json")).reduce((a, x) => { a[x.id] = x; return a }, {});

            function registerButtons() {
                registerClickOnClass("create-test-lane",
                    () => {
                        setLane([
                            { "id": "carl" },
                            { "id": "hunter" },
                            { "id": "jet" }
                        ]);
                    });
                registerClickOnClass("save",
                    async () => {
                        let units = JSON.parse(document.getElementById("lane").value);
                        setLane(units);
                        await apiPostCall("/player/lane",
                            {
                                id: "default",
                                units: units
                            });
                    });
                registerClickOnClass("fight",
                    async () => {
                        let units = JSON.parse(document.getElementById("lane").value);
                        let laneA = { "units": units };
                        let laneB = { "units": units };
                        let log = await apiPostCall("/player/fight",
                            {
                                laneA: laneA,
                                laneB: laneB
                            });
                        document.getElementById("battle-log").innerText = renderLog(log, laneA, laneB);
                    });


            }

            function setUserInfo(text) {
                document.getElementById("user-info").innerText = text;
            }

            function setLane(units) {
                document.getElementById("lane").value = JSON.stringify(units);
                document.getElementById("setup-printed").innerText = renderSetup(units);
            }

            async function loadUserInfo() {
                let user = await apiGetCall("/account/me");
                if (!user.authenticated) {
                    setUserInfo(" not logged in");
                    return;
                }
                setUserInfo(user.name + " " + user.id);
                let lane = await apiGetCall("/player/lane/default");
                setLane(lane.units);
            }

            function renderSetup(units) {
                let result = "";
                for (let i = 0; i < units.length; i++) {
                    let unit = units[i];
                    let type = unitTypes[unit.id];
                    result += `${i + 1} ${type.name} atk:${type.attack} hp:${type.hp}\n`;
                }
                return result;
            }

            function renderLog(log, laneA, laneB) {
                let result = "";
                for (let i = 0; i < log.length; i++) {
                    let event = log[i];
                    result += event.type + " ";
                    function getUnitFromId(unitId) {
                        let type = null;
                        if (unitId > 0)
                            type = unitTypes[laneA.units[+unitId - 1].id];
                        if (unitId < 0)
                            type = unitTypes[laneB.units[-unitId - 1].id];
                        return type.name;
                    }
                    if (event.source)
                        result += getUnitFromId(event.source) + " ";
                    if (event.target)
                        result += getUnitFromId(event.target) + " ";
                    if (event.value)
                        result += event.value + " ";
                    result += "\n";
                }
                return result;
            }
            registerButtons();
            await loadUserInfo();
			
			// Create WebSocket connection.
			const socket = new WebSocket('wss://localhost:5001/ws');

			// Connection opened
			socket.addEventListener('open', function (event) {
				socket.send('Hello Server!');
			});

			// Listen for messages
			socket.addEventListener('message', function (event) {
				console.log('Message from server ', event.data);
			});
        }

        document.addEventListener('DOMContentLoaded', () => startGame());
    </script>
</head>
<body>
    <h1>Roguelike v0.00002c</h1>
    <div>Account <span id="user-info"></span></div>
    <div><textarea name="lane" id="lane"></textarea></div>
    <button class="create-test-lane">create test lane</button>
    <button class="save">Save</button>
    <button class="fight">Fight</button>
    <div><span id="setup-printed"></span></div>
    <div>Battle log <span id="battle-log"></span></div>
</body>
</html>